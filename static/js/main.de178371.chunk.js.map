{"version":3,"sources":["axios.js","request.js","Row.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","request","fetchtrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","requests","Math","floor","random","length","style","backgroundSize","backgroundImage","backgrroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de178371.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\nexport default instance;","const API_KEY = \"f75cd6c788dbd404caf9e2c32dc43b6e\";\r\n\r\nconst request = {\r\n    fetchtrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&anguage=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n\r\n}\r\n\r\nexport default request;","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport request from './request';\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    useEffect(() => {\r\n\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    }, [fetchUrl]);\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: 1,\r\n        },\r\n    };\r\n\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl('');\r\n        } else {\r\n            movieTrailer(movie?.name || \"\")\r\n                .then((url) => {\r\n                    const urlParams = new URLSearchParams(new URL(url).search);\r\n                    setTrailerUrl(urlParams.get(\"v\"));\r\n                })\r\n                .catch((error) => console.log(error));\r\n        }\r\n    };\r\n\r\n    //console.log(movies);\r\n    return (\r\n        <div className=\"row\">\r\n\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"row_posters\">\r\n                {movies.map((movie) => (\r\n                    <img\r\n                        key={movie.id}\r\n                        onClick={()=> handleClick(movie)}\r\n                        className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                        src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}\r\n                    />\r\n                    ))}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport request from './request';\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const requests = await axios.get(request.fetchNetflixOriginals);\r\n            setMovie(\r\n                requests.data.results[Math.floor(Math.random() * requests.data.results.length - 1)]\r\n            );\r\n            return requests;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    //console.log(movie);\r\n\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n    }\r\n    return (\r\n\r\n        <header className=\"banner\" style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            backgrroundPosition:\"center center\"}}>\r\n            <div className=\"banner_contents\">\r\n\r\n                <h1 className=\"banner_title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n                </div>\r\n                <h1 className=\"banner_description\">\r\n                    {truncate(movie?.overview,150)}\r\n                </h1>\r\n            </div>\r\n\r\n            <div className=\"banner_fadeBottom\"></div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Banner;","import React, { useState, useEffect } from 'react';\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100) {\r\n                handleShow(true);\r\n            } else handleShow(false);\r\n        });\r\n\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className={ `nav ${show && \"nav_black\"}`}>\r\n            <img\r\n                className=\"nav_logo\"\r\n                src=\"https://logos-download.com/wp-content/uploads/2016/03/Netflix_logo.png\"\r\n                alt=\"Netflix_Logo\"\r\n            />\r\n            <img className=\"nav_avtar\" src=\"https://cdn.shopify.com/s/files/1/0076/4103/8906/products/transformers-war-for-cybertron-trilogy-netflix-walmart-voyager-optimus-prime-3pack-robot-render_160x160.jpg?v=1598681854\" alt=\"Netflix_Logo\" />\r\n        </div>\r\n    );\r\n}\r\nexport default Nav;","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport request from './request';\nimport Banner from './Banner';\nimport Nav from './Nav';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Nav />\n            <Banner />\n            <Row title=\"NETFLIX ORIGINALS\" fetchUrl={request.fetchNetflixOriginals}\n            isLargeRow/>\n            <Row title=\"Trending Now\" fetchUrl={request.fetchtrending} />\n            <Row title=\"Top Rated\" fetchUrl={request.fetchTopRated} />\n            <Row title=\"Action Movies\" fetchUrl={request.fetchActionMovies} />\n            <Row title=\"Comedy Movies\" fetchUrl={request.fetchComedyMovies} />\n            <Row title=\"Horror Movies\" fetchUrl={request.fetchHorrorMovies} />\n            <Row title=\"Romance Movies\" fetchUrl={request.fetchRomanceMovies} />\n            <Row title=\"Documentries\" fetchUrl={request.fetchDocumentaries} />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}